openapi: '3.0.0'
info:
  version: 1.0.0
  title: myJobPlanner API
  description: The myJobPlanner API
servers:
  - url: /v1
paths:
  /businesses:
    get:
      description: |
        Returns all businesses
      operationId: findBusinesses
      parameters:
        - name: type
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: string
            enum:
              - dog
              - cat
        - name: tags
          in: query
          description: tags to filter by
          required: false
          style: form
          schema:
            type: array
            items:
              type: string
        - name: limit
          in: query
          description: maximum number of results to return
          required: false
          schema:
            type: integer
            format: int32
            minimum: 1
            maximum: 20
      responses:
        '200':
          description: business response
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Business'
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  #   post:
  #     description: Creates a new pet in the store.
  #     operationId: addPet
  #     security:
  #       - ApiKeyAuth: []
  #     requestBody:
  #       description: Pet to add to the store
  #       required: true
  #       content:
  #         application/json:
  #           schema:
  #             $ref: '#/components/schemas/Pet'
  #     responses:
  #       '200':
  #         description: pet response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

  # /pets/{id}:
  #   get:
  #     description: Returns a user based on a single ID, if the user does not have access to the pet
  #     operationId: find pet by id
  #     parameters:
  #       - name: id
  #         in: path
  #         description: ID of pet to fetch
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #     responses:
  #       '200':
  #         description: pet response
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Pet'
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'
  #   delete:
  #     description: deletes a single pet based on the ID supplied
  #     operationId: deletePet
  #     parameters:
  #       - name: id
  #         in: path
  #         description: ID of pet to delete
  #         required: true
  #         schema:
  #           type: integer
  #           format: int64
  #     responses:
  #       '204':
  #         description: pet deleted
  #       default:
  #         description: unexpected error
  #         content:
  #           application/json:
  #             schema:
  #               $ref: '#/components/schemas/Error'

components:
  schemas:
    Business:
      required:
        - id
        - name
        - timezone
      properties:
        id:
          readOnly: true
          type: number
        name:
          type: string
        timezone:
          type: string
        # tag:
        #   type: string
        # type:
        #   $ref: '#/components/schemas/PetType'

    # PetType:
    #   type: string
    #   enum:
    #     - dog
    #     - cat

    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key
