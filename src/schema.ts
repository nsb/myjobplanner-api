/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export type paths = {
  "/businesses": {
    /** Returns all businesses */
    get: operations["findBusinesses"];
    /** Create business */
    post: operations["createBusiness"];
  };
  "/businesses/{Id}": {
    /** Returns a single business */
    get: operations["getBusiness"];
    /** Updates a single business */
    put: operations["updateBusiness"];
  };
  "/businesses/{businessId}/clients": {
    /** Returns all clients */
    get: operations["findClients"];
    /** Create client */
    post: operations["createClient"];
  };
  "/businesses/{businessId}/clients/{Id}": {
    /** Returns a single client */
    get: operations["getClients"];
    /** Update client */
    put: operations["updateClient"];
  };
  "/businesses/{businessId}/properties": {
    /** Returns all properties */
    get: operations["findProperties"];
    /** Create property */
    post: operations["createProperty"];
  };
  "/businesses/{businessId}/properties/{Id}": {
    /** Update property */
    put: operations["updateProperty"];
  };
  "/businesses/{businessId}/jobs": {
    /** Returns all jobs */
    get: operations["findJobs"];
    /** Create job */
    post: operations["createJob"];
  };
  "/businesses/{businessId}/visits": {
    /** Returns all visits */
    get: operations["findVisits"];
    /** Create visit */
    post: operations["createVisit"];
  };
  "/businesses/{businessId}/visits/{Id}": {
    /** Update visit */
    put: operations["updateVisit"];
  };
};

export type components = {
  schemas: {
    Business: {
      id: number;
      name: string;
      timezone: string;
      countryCode: string;
    };
    Client: {
      id: number;
      business: string;
      firstName?: string | null;
      lastName?: string | null;
    };
    Property: {
      id: number;
      client: string;
      description?: string | null;
      address1?: string | null;
      address2?: string | null;
      city?: string | null;
      postalCode?: string | null;
      country?: string | null;
    };
    Job: {
      id: number;
      client: string;
      property: string;
      recurrences?: string | null;
      begins: string;
      ends?: string | null;
      startTime?: string | null;
      finishTime?: string | null;
      anytime: boolean;
      title?: string | null;
      description?: string | null;
      closed: boolean;
      /** @enum {string} */
      invoice: "closed" | "monthly" | "never" | "visit";
      lineItems: components["schemas"]["LineItem"][];
    };
    LineItem: {
      id?: number;
      serviceId?: number | null;
      name?: string;
      description?: string | null;
      quantity: number;
      unitCost?: number;
    };
    Visit: {
      id?: number;
      job: string;
      invoice?: string | null;
      completed: boolean;
      begins: string;
      ends?: string | null;
      anytime: boolean;
      lineItems: components["schemas"]["LineItem"][];
    };
    Error: {
      message: string;
    };
  };
  parameters: {
    /** @description offset from beginning */
    offsetParam: number;
    /** @description maximum number of results to return */
    limitParam: number;
    /** @description Order direction */
    orderDirectionParam: "ASC" | "DESC";
    /** @description Numeric Id of the resource to get */
    idParam: number;
    /** @description Numeric Id of the business to get */
    businessIdParam: number;
  };
};

export type operations = {
  /** Returns all businesses */
  findBusinesses: {
    parameters: {
      query: {
        /** offset from beginning */
        offset?: components["parameters"]["offsetParam"];
        /** maximum number of results to return */
        limit?: components["parameters"]["limitParam"];
        /** Order direction */
        orderDirection?: components["parameters"]["orderDirectionParam"];
        /** Order by field */
        orderBy?: "id" | "created" | "name";
      };
    };
    responses: {
      /** business response */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["Business"][];
            meta?: {
              totalCount?: number;
            };
          };
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create business */
  createBusiness: {
    responses: {
      /** business response */
      201: {
        content: {
          "application/json": components["schemas"]["Business"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Create business */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Business"];
      };
    };
  };
  /** Returns a single business */
  getBusiness: {
    parameters: {
      path: {
        /** Numeric Id of the resource to get */
        Id: components["parameters"]["idParam"];
      };
    };
    responses: {
      /** get business response */
      200: {
        content: {
          "application/json": components["schemas"]["Business"];
        };
      };
      /** get business not found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Updates a single business */
  updateBusiness: {
    parameters: {
      path: {
        /** Numeric Id of the resource to get */
        Id: components["parameters"]["idParam"];
      };
    };
    responses: {
      /** update business response */
      200: {
        content: {
          "application/json": components["schemas"]["Business"];
        };
      };
      /** update business not found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Returns all clients */
  findClients: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
      query: {
        /** offset from beginning */
        offset?: components["parameters"]["offsetParam"];
        /** maximum number of results to return */
        limit?: components["parameters"]["limitParam"];
        /** Order direction */
        orderDirection?: components["parameters"]["orderDirectionParam"];
      };
    };
    responses: {
      /** client response */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["Client"][];
            meta?: {
              totalCount?: number;
            };
          };
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create client */
  createClient: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
    };
    responses: {
      /** client response */
      201: {
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Create client */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Client"];
      };
    };
  };
  /** Returns a single client */
  getClients: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
        /** Numeric Id of the resource to get */
        Id: components["parameters"]["idParam"];
      };
    };
    responses: {
      /** get client response */
      200: {
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** get client not found */
      404: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Update client */
  updateClient: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
        /** Numeric Id of the resource to get */
        Id: components["parameters"]["idParam"];
      };
    };
    responses: {
      /** client response */
      200: {
        content: {
          "application/json": components["schemas"]["Client"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Update client */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Client"];
      };
    };
  };
  /** Returns all properties */
  findProperties: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
      query: {
        /** offset from beginning */
        offset?: components["parameters"]["offsetParam"];
        /** maximum number of results to return */
        limit?: components["parameters"]["limitParam"];
        /** Order direction */
        orderDirection?: components["parameters"]["orderDirectionParam"];
        /** filter by client */
        client?: string;
      };
    };
    responses: {
      /** property response */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["Property"][];
            meta?: {
              totalCount?: number;
            };
          };
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create property */
  createProperty: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
    };
    responses: {
      /** property response */
      201: {
        content: {
          "application/json": components["schemas"]["Property"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Create property */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Property"];
      };
    };
  };
  /** Update property */
  updateProperty: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
        /** Numeric Id of the resource to get */
        Id: components["parameters"]["idParam"];
      };
    };
    responses: {
      /** property response */
      200: {
        content: {
          "application/json": components["schemas"]["Property"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Update property */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Property"];
      };
    };
  };
  /** Returns all jobs */
  findJobs: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
      query: {
        /** offset from beginning */
        offset?: components["parameters"]["offsetParam"];
        /** maximum number of results to return */
        limit?: components["parameters"]["limitParam"];
        /** Order direction */
        orderDirection?: components["parameters"]["orderDirectionParam"];
        /** filter by client */
        client?: string;
      };
    };
    responses: {
      /** job response */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["Job"][];
            meta?: {
              totalCount?: number;
            };
          };
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create job */
  createJob: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
    };
    responses: {
      /** job response */
      201: {
        content: {
          "application/json": components["schemas"]["Job"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Create job */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Job"];
      };
    };
  };
  /** Returns all visits */
  findVisits: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
      query: {
        /** offset from beginning */
        offset?: components["parameters"]["offsetParam"];
        /** maximum number of results to return */
        limit?: components["parameters"]["limitParam"];
        /** Order direction */
        orderDirection?: components["parameters"]["orderDirectionParam"];
        /** filter by client */
        client?: string;
        /** filter by job */
        job?: string;
      };
    };
    responses: {
      /** visit response */
      200: {
        content: {
          "application/json": {
            data?: components["schemas"]["Visit"][];
            meta?: {
              totalCount?: number;
            };
          };
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
  };
  /** Create visit */
  createVisit: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
      };
    };
    responses: {
      /** visit response */
      201: {
        content: {
          "application/json": components["schemas"]["Visit"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Create visit */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Visit"];
      };
    };
  };
  /** Update visit */
  updateVisit: {
    parameters: {
      path: {
        /** Numeric Id of the business to get */
        businessId: components["parameters"]["businessIdParam"];
        /** Numeric Id of the resource to get */
        Id: components["parameters"]["idParam"];
      };
    };
    responses: {
      /** visit response */
      200: {
        content: {
          "application/json": components["schemas"]["Visit"];
        };
      };
      /** unexpected error */
      default: {
        content: {
          "application/json": components["schemas"]["Error"];
        };
      };
    };
    /** Update visit */
    requestBody: {
      content: {
        "application/json": components["schemas"]["Visit"];
      };
    };
  };
};

export type external = {};
